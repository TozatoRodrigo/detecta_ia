version: '3.8'

services:
  # PostgreSQL Database
  postgres:
    image: postgres:15
    container_name: fraud_detection_db
    environment:
      POSTGRES_DB: fraud_detection
      POSTGRES_USER: fraud_user
      POSTGRES_PASSWORD: fraud_password
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./init.sql:/docker-entrypoint-initdb.d/init.sql
    networks:
      - fraud_network

  # Redis for caching and session storage
  redis:
    image: redis:7-alpine
    container_name: fraud_detection_redis
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - fraud_network

  # Backend API
  backend:
    build:
      context: .
      dockerfile: Dockerfile.backend
    container_name: fraud_detection_api
    environment:
      - DATABASE_URL=postgresql://fraud_user:fraud_password@postgres:5432/fraud_detection
      - REDIS_URL=redis://redis:6379
      - SECRET_KEY=your-super-secret-key-change-in-production
    ports:
      - "8000:8000"
    depends_on:
      - postgres
      - redis
    volumes:
      - ./backend:/app
      - ml_models:/app/models
    networks:
      - fraud_network
    restart: unless-stopped

  # Streamlit Dashboard
  dashboard:
    build:
      context: .
      dockerfile: Dockerfile.dashboard
    container_name: fraud_detection_dashboard
    environment:
      - API_BASE_URL=http://backend:8000
    ports:
      - "8501:8501"
    depends_on:
      - backend
    volumes:
      - ./dashboard.py:/app/dashboard.py
    networks:
      - fraud_network
    restart: unless-stopped

  # Nginx Reverse Proxy
  nginx:
    image: nginx:alpine
    container_name: fraud_detection_nginx
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf
      - ./ssl:/etc/nginx/ssl
    depends_on:
      - backend
      - dashboard
    networks:
      - fraud_network
    restart: unless-stopped

volumes:
  postgres_data:
  redis_data:
  ml_models:

networks:
  fraud_network:
    driver: bridge